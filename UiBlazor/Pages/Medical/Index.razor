@page "/medicalIndex"
@using System.Net.Http.Json
@inject HttpClient httpClient
@inject IMedicalService medicalService
@inject NavigationManager navigationManager
<MudButton  Variant="Variant.Filled" Color="Color.Primary" OnClick="NavTocreate" Style="margin:20px">Create</MudButton>

<MudDataGrid T="MedicalModel" Items="Medical"  EditMode="DataGridEditMode.Form"
    CanceledEditingItem="@CanceledEditingItem" CommittedItemChanges="@CommittedItemChanges"
    Bordered="true" Dense="true" EditTrigger="@(_editTriggerRowClick ? DataGridEditTrigger.OnRowClick : DataGridEditTrigger.Manual)">
    <Columns>
        <PropertyColumn Property="x => x.Name" Title="Name" IsEditable="false" />
        
        <TemplateColumn Hidden="false" CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItemAsync" />
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>




@code {
    private IEnumerable<MedicalModel> Medical = new List<MedicalModel>();
    private bool _readOnly;
    private bool _isCellEditMode;
    private List<string> _events = new();
    private bool _editTriggerRowClick;

    protected override async Task OnInitializedAsync()
    {
        var result = await medicalService.GetAll();
        if (result.Code == 0)
        {
            Medical = result.Content;
            StateHasChanged();
        }
    }

    // events
    void StartedEditingItem(MedicalModel item)
    {
        _events.Insert(0, $"Event = StartedEditingItem, Data = {System.Text.Json.JsonSerializer.Serialize(item)}");
    }

    void CanceledEditingItem(MedicalModel item)
    {
        _events.Insert(0, $"Event = CanceledEditingItem, Data = {System.Text.Json.JsonSerializer.Serialize(item)}");
    }

    void CommittedItemChanges(MedicalModel item)
    {
        _events.Insert(0, $"Event = CommittedItemChanges, Data = {System.Text.Json.JsonSerializer.Serialize(item)}");
    }

    void NavTocreate()
    {
        navigationManager.NavigateTo("/createMedical");
    }
}